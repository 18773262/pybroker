# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 22:52-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../docs/source/reference/pybroker.common.rst:2
#: 56ed390a4ce24df4ab86d566b7141a76
msgid "pybroker.common module"
msgstr ""

#: b3c791d806b04b35bbb75922e3e00651 of pybroker.common:1
msgid "Contains common classes and utilities."
msgstr ""

#: f3ed465126374fa787f804822dcd0dbd of pybroker.common.BarData:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: 14f0053587f840b7a170e095dc9b4549 of pybroker.common.BarData:1
msgid ""
"Contains data for a series of bars. Each field is a "
":class:`numpy.ndarray` that contains bar values in the series. The values"
" are sorted in ascending chronological order."
msgstr ""

#: 4aa5cf5739b64fe299b25c8912fb4dbb of pybroker.common.BarData
msgid "Parameters"
msgstr ""

#: 54344aa709554747b99818f462266392 of pybroker.common.BarData:5
msgid "Timestamps of each bar."
msgstr ""

#: f611bde807064c9ca2fd150a3abed721 of pybroker.common.BarData:6
msgid "Open prices."
msgstr ""

#: 3ae0385c153746bda5d8eeb6220a7ae4 of pybroker.common.BarData:7
msgid "High prices."
msgstr ""

#: 3afd6cb74adb41e188a966549173757a of pybroker.common.BarData:8
msgid "Low prices."
msgstr ""

#: 805e10ae56ca4e958f0a0b839a82bf57 of pybroker.common.BarData:9
msgid "Close prices."
msgstr ""

#: 15c600dc07414e97b1decccf985ba2e3 of pybroker.common.BarData:10
msgid "Trading volumes."
msgstr ""

#: 95dc8b1de8744e4d980042b69670ca1a of pybroker.common.BarData:11
msgid "Volume-weighted average prices (VWAP)."
msgstr ""

#: 26716fca7ab743fea450cc60b850f0fc of pybroker.common.BarData:12
msgid "Custom data fields."
msgstr ""

#: 3836533e7b254d0899ae2f1592af21b4 7a0f3fd65887428baa50e88725bc98a8
#: a7f55723fbb745c782ca6aa34b2f84b5 bc7d6add0eac434e99f88c03b24e248c
#: db04b91a2ce743d08e9a6d9c195e3c81 of pybroker.common.DataCol:1
#: pybroker.common.Day:1 pybroker.common.FeeMode:1 pybroker.common.PriceType:1
#: pybroker.common.StopType:1
msgid "Bases: :py:class:`~enum.Enum`"
msgstr ""

#: 997c587076804088a5e448425a32ac85 of pybroker.common.DataCol:1
msgid "Default data column names."
msgstr ""

#: 3cf20254075b4dda8e696c079bbb0221 of pybroker.common.Day:1
msgid "Enumeration of days."
msgstr ""

#: 80a256d35d454aec9f4dbc335d3fa30b of pybroker.common.FeeMode:1
msgid "Brokerage fee mode to use for backtesting."
msgstr ""

#: 189f761c39e8444cb2bfae9045a0184e of pybroker.common.FeeMode:5
msgid ""
"Fee is a percentage of order amount, where order amount is fill_price * "
"shares."
msgstr ""

#: 86c1d7dd8786492f8077fc94cfb5af76 of pybroker.common.FeeMode:10
msgid "Fee is a constant amount per order."
msgstr ""

#: 7ab9c65f763646ee8a161e0a8c55b3c8 of pybroker.common.FeeMode:14
msgid "Fee is a constant amount per share in order."
msgstr ""

#: 25ddaebba89f4378a9779cb58b93aea1 280593d5aa6d4ab7a7e3150f601b6739
#: 87f15720f27945999902b4554f21826a of pybroker.common.IndicatorSymbol:1
#: pybroker.common.ModelSymbol:1 pybroker.common.TrainedModel:1
msgid "Bases: :py:class:`~typing.NamedTuple`"
msgstr ""

#: bb3d607151ab4347b517150466c8d150 of pybroker.common.IndicatorSymbol:1
msgid ":class:`pybroker.indicator.Indicator`/symbol identifier."
msgstr ""

#: 6457a8fa34484ef6bfea625ecc0cf22d of pybroker.common.IndicatorSymbol:5
msgid "Indicator name."
msgstr ""

#: 457d25612d7941dd8e58927f16a3d06d 4cf3a2bd110045f69a0fbf9f5abbb991
#: 5ed685c9514b4bf0995f2b1c365c9786 6bb5c4acfcb94726a438a425b8d3b9c5
#: af24e2d7328a4db1b3d253b5685bce54 c13251ddfe2d4053bd1a5ace4520e44b
#: c3b52ec1130c4db28f9d8e9116af1736 eaa2d5447ad942b390665fc56fcf2f5c of
#: pybroker.common.IndicatorSymbol pybroker.common.ModelSymbol
#: pybroker.common.TrainedModel
msgid "type"
msgstr ""

#: 20dd20d413054475b8a6cf84cf96315a 47f9d73989d34e8591bfc008e0da334a
#: a4ad6a275d104e219c3a4e43045efbd0 c2c357b4a1364d759455dbd50366c0a0
#: fa29f7a5006a4de8b6d10547ae740304 of pybroker.common.IndicatorSymbol:7
#: pybroker.common.IndicatorSymbol:13 pybroker.common.ModelSymbol:7
#: pybroker.common.ModelSymbol:13 pybroker.common.TrainedModel:7
msgid "str"
msgstr ""

#: 342da439345a4377850f08358cf1e49b 92089e855ccc494cb7b81aeb6baba07d of
#: pybroker.common.IndicatorSymbol:11 pybroker.common.ModelSymbol:11
msgid "Ticker symbol."
msgstr ""

#: 1ac790c8be5c4c1bbfc74f21173a0659 of pybroker.common.ModelSymbol:1
msgid ":class:`pybroker.model.ModelSource`/symbol identifier."
msgstr ""

#: 19c42c3ef1f24e39b1fbf3b2a82b8bcc of pybroker.common.ModelSymbol:5
msgid "Model name."
msgstr ""

#: 6e3fffef64e944978a262bbcd51932dc of pybroker.common.PriceType:1
msgid ""
"Enumeration of price types used to specify fill price with "
":class:`pybroker.context.ExecContext`."
msgstr ""

#: ddf6d00500c9412094efc5d2ddacb42e of pybroker.common.PriceType:6
msgid "Open price of the current bar."
msgstr ""

#: 1738fffbc15347fdb79e3829691518bc of pybroker.common.PriceType:10
msgid "Low price of the current bar."
msgstr ""

#: 78b8a0ef18ed41f9b3a8463bc13cd242 of pybroker.common.PriceType:14
msgid "High price of the current bar."
msgstr ""

#: 76bba876c6a440db94326e7553c62df8 of pybroker.common.PriceType:18
msgid "Close price of the current bar."
msgstr ""

#: 5ebb6eb2ec584b32a6e6482b2ea6dd39 of pybroker.common.PriceType:22
msgid "Midpoint between low price and high price of the current bar."
msgstr ""

#: 2f013b56f4f1402f9f7aaa25beb54aba of pybroker.common.PriceType:26
msgid "Average of open, low, high, and close prices of the current bar."
msgstr ""

#: 023475120f6549b386f9800c05713f1b of pybroker.common.StopType:1
msgid "Stop types."
msgstr ""

#: 20a739ed390d42999d0408a1b1f96150 of pybroker.common.StopType:5
msgid "Stop that triggers after n bars."
msgstr ""

#: b87ed17aca104d9680be59222d30725e of pybroker.common.StopType:9
msgid "Stop loss."
msgstr ""

#: 9f61aeae5ac54582b4ba14c7c6f313e9 of pybroker.common.StopType:13
msgid "Take profit."
msgstr ""

#: 3c54999eb9ea4f038e12330362ed5a2d of pybroker.common.StopType:17
msgid "Trailing stop loss."
msgstr ""

#: 603459d194644633a6c153838e0c2e08 of pybroker.common.TrainedModel:1
msgid "Trained model/symbol identifier."
msgstr ""

#: fb7fa43f73f645a9b16d02c6c3920e53 of pybroker.common.TrainedModel:5
msgid "Trained model name."
msgstr ""

#: e2257320ba7b4edab6fea803be5fc09b of pybroker.common.TrainedModel:11
msgid "Trained model instance."
msgstr ""

#: 0092a71f379e481581c1ae50432c1afa of pybroker.common.TrainedModel:13
msgid "Any"
msgstr ""

#: a59741c9982a4b609513bb67af8ed43a of pybroker.common.TrainedModel:17
msgid ""
":class:`Callable` that overrides calling the model's default ``predict`` "
"function."
msgstr ""

#: bcd8bf4c207143ca97fdcce01dbae40f of pybroker.common.TrainedModel:20
msgid ""
"Callable[[Any, pandas.core.frame.DataFrame], numpy.ndarray[Any, "
"numpy.dtype[numpy._typing._generic_alias.ScalarType]]] | None"
msgstr ""

#: 973736fe77554a0c8891be8654a4d7b1 of pybroker.common.TrainedModel:24
msgid ""
"Names of the columns to be used as input for the model when making "
"predictions."
msgstr ""

#: c72830e3ea024e5da3fdd728f01d3cd9 of pybroker.common.TrainedModel:27
msgid "tuple[str] | None"
msgstr ""

#: ../../docstring 06ee340391234927810cfa18ccac7951 of
#: pybroker.common.TrainedModel.input_cols:1
msgid "Alias for field number 3"
msgstr ""

#: 6b1dd8d8ba5b4efd963527a8aa33bffb of pybroker.common.default_parallel:1
msgid ""
"Returns a :class:`joblib.Parallel` instance with ``n_jobs`` equal to the "
"number of CPUs on the host machine."
msgstr ""

#: 20d7ab6b74b446cebb657323d0142092 of pybroker.common.parse_timeframe:1
msgid "Parses timeframe string with the following units:"
msgstr ""

#: 52479fbef0f54912a49ac6e044e3e0b0 cd7ea64408cc4e38aeecde59312e07c0 of
#: pybroker.common.parse_timeframe:3 pybroker.common.to_seconds:4
msgid "``\"s\"``/``\"sec\"``: seconds"
msgstr ""

#: 251e4e3d16ea4b9e89ffaf8d16f46012 a0f690456bf74d559da165a6d06c9d55 of
#: pybroker.common.parse_timeframe:4 pybroker.common.to_seconds:5
msgid "``\"m\"``/``\"min\"``: minutes"
msgstr ""

#: 52c7ece9e5c94e8cb7e6aea925d38121 8574fb6b49bb4f6ca19a0ccecc749f32 of
#: pybroker.common.parse_timeframe:5 pybroker.common.to_seconds:6
msgid "``\"h\"``/``\"hour\"``: hours"
msgstr ""

#: 58c29025d8884b63babb37db876682c3 bd8ca97778384984a88a1b6b751cfdc9 of
#: pybroker.common.parse_timeframe:6 pybroker.common.to_seconds:7
msgid "``\"d\"``/``\"day\"``: days"
msgstr ""

#: 1a23740b4e0a465c9f71da1618d10908 cf5e28370e0b4f08bf223a556ad9e136 of
#: pybroker.common.parse_timeframe:7 pybroker.common.to_seconds:8
msgid "``\"w\"``/``\"week\"``: weeks"
msgstr ""

#: de54df35e2cc422ab722e9afd851d30b df03d1c030814cb5b4ca6df3f8af4302 of
#: pybroker.common.parse_timeframe:8 pybroker.common.to_seconds:9
msgid "``\"mo\"``/``\"month\"``: months"
msgstr ""

#: beb54de9430440caa6820841061ff663 de24817163984d0c8eb3cd4a579f3df7 of
#: pybroker.common.parse_timeframe:10 pybroker.common.to_seconds:11
msgid "An example timeframe string is ``1h 30m``."
msgstr ""

#: 2a82e983eeca4922bb51cda48f2a7e6a 51da2760b7414e428b791de02d925e9e
#: cc5655f44dba4d66985a1f1a3a4b0b6f of pybroker.common.parse_timeframe
#: pybroker.common.quantize pybroker.common.to_seconds
msgid "Returns"
msgstr ""

#: 2fcf4c9630cd4dbf84d3e53a9125107b of pybroker.common.parse_timeframe:12
msgid ""
"``list`` of ``tuple[int, str]``, where each tuple contains an ``int`` "
"value and ``str`` unit."
msgstr ""

#: b35311a153a84d4b90ab97f249e916a3 of pybroker.common.quantize:1
msgid ""
"Quantizes a :class:`pandas.DataFrame` column by rounding values to the "
"nearest cent."
msgstr ""

#: 08d80e490af145d08622650545f8dbcc of pybroker.common.quantize:4
msgid "The quantized column converted to ``float`` values."
msgstr ""

#: 6f76961fecee45329c5a8fbf45b1ffe5 of pybroker.common.to_datetime:1
msgid "Converts ``date`` to :class:`datetime`."
msgstr ""

#: 15354083b9ca43809a4b86c7704bf4ab of pybroker.common.to_decimal:1
msgid "Converts ``value`` to :class:`Decimal`."
msgstr ""

#: ddc093f0774d40c08389f8a7403ecf9b of pybroker.common.to_seconds:1
msgid ""
"Converts a timeframe string to seconds, where ``timeframe`` supports the "
"following units:"
msgstr ""

#: 78193c559dfb4a16801e35f48bbc7f58 of pybroker.common.to_seconds:13
msgid "The converted number of seconds."
msgstr ""

#: 5234df8ca67f45459f044a5979070781 of
#: pybroker.common.verify_data_source_columns:1
msgid ""
"Verifies that a :class:`pandas.DataFrame` contains all of the columns "
"required by a :class:`pybroker.data.DataSource`."
msgstr ""

#: 432e130a85484789a66aa0a0ab9acd80 of pybroker.common.verify_date_range:1
msgid "Verifies date range bounds."
msgstr ""

