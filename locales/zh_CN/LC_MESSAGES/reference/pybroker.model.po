# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 22:52-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../docs/source/reference/pybroker.model.rst:2
#: c46c5f064d2b43c292e720570684bbf9
msgid "pybroker.model module"
msgstr ""

#: 946b65e58ce1499e90b34347e5aad1aa of pybroker.model:1
msgid "Contains model related functionality."
msgstr ""

#: a79266e7884e418fb3c2e49a8a93a1fd of pybroker.model.CachedModel:1
msgid "Bases: :py:class:`~typing.NamedTuple`"
msgstr ""

#: a6515afb5ad24a9db21af7a6b78543f3 of pybroker.model.CachedModel:1
msgid "Stores cached model data."
msgstr ""

#: 1a7ad4f98b56451481d4514b60debe9d of pybroker.model.CachedModel:5
msgid "Trained model instance."
msgstr ""

#: 15578fd234bc4fe09d8d22d7986b2910 39b0e39db5dc4e9db1ca39397ae65419 of
#: pybroker.model.CachedModel
msgid "type"
msgstr ""

#: 32963d01b8d04e1e81a5ba2890baf04f of pybroker.model.CachedModel:7
msgid "Any"
msgstr ""

#: a7440d15883640e3965713ad68df4869 of pybroker.model.CachedModel:11
msgid ""
"Names of the columns to be used as input for the model when making "
"predictions."
msgstr ""

#: bea9672158f34eb3bd9003ce1f352e48 of pybroker.model.CachedModel:14
msgid "tuple[str] | None"
msgstr ""

#: ../../docstring 739e0e9a1acf43119060e75cc332c21e of
#: pybroker.model.CachedModel.input_cols:1
msgid "Alias for field number 1"
msgstr ""

#: ../../docstring 54a57486452a4167bd4a6035a4506ec2 of
#: pybroker.model.CachedModel.model:1
msgid "Alias for field number 0"
msgstr ""

#: 21f3ce1ae843433c8b60073976410005 f9b87fec5add425da61c6bef7e118b4b of
#: pybroker.model.ModelLoader:1 pybroker.model.ModelTrainer:1
msgid "Bases: :py:class:`~pybroker.model.ModelSource`"
msgstr ""

#: 01fc17ab286e44a8a210cd8d1281f4dc of pybroker.model.ModelLoader:1
msgid "Loads a pre-trained model."
msgstr ""

#: 202893d4303148e3a327f0ce886789ef 7ae271d9c1294eea963ac785c1fa62c4
#: 9814111f2279477d9a6772afd0a83bdd 9f45af9c24674080988e39332efd62cc
#: aafc230e9ade45ccb8a07803ea9002e2 da20042719a5434284a91db0833d7d59
#: e6d4781983994595b0720c6d26407dfe of pybroker.model.ModelLoader
#: pybroker.model.ModelLoader.__call__ pybroker.model.ModelSource
#: pybroker.model.ModelTrainer pybroker.model.ModelTrainer.__call__
#: pybroker.model.ModelsMixin.train_models pybroker.model.model
msgid "Parameters"
msgstr ""

#: 4cf7fd99f1ff41d7b46d28d774a7f79c 6e0ff2a469324dc185f9b50352c4f8c0
#: f1946ae719644a3b8e66deb466f19690 of pybroker.model.ModelLoader:3
#: pybroker.model.ModelSource:4 pybroker.model.ModelTrainer:3
msgid "Name of model."
msgstr ""

#: ee5216815a844ae9be70c1cf4fddf8ab of pybroker.model.ModelLoader:4
msgid ""
"``Callable[[symbol: str, ...], DataFrame]`` used to load and return a "
"pre-trained model. This is expected to return either a trained model "
"instance, or a tuple containing a trained model instance and a "
":class:`Collection` of column names to to be used as input for the model "
"when making predictions."
msgstr ""

#: 282db5938fff43008ecfe2040f20cb96 8e9699b003474f1085f950d0449e508f
#: d9254f3513b64104b4bc3e2d76dc1364 of pybroker.model.ModelLoader:9
#: pybroker.model.ModelSource:5 pybroker.model.ModelTrainer:10
msgid ""
":class:`Iterable` of names of :class:`pybroker.indicator.Indicator`\\ s "
"used as features of the model."
msgstr ""

#: 0490629c91c446ab93d689868f69b31f b812ed3329db476f934927d06a347f37
#: c73b774f37cb4185a8f6ed744d8e7c38 ed82e8db3c6d4c78beaed3eafaddf4eb of
#: pybroker.model.ModelLoader:12 pybroker.model.ModelSource:8
#: pybroker.model.ModelTrainer:13 pybroker.model.model:16
msgid ""
":class:`Callable[[DataFrame], DataFrame]` for preprocessing input data "
"passed to the model when making predictions. If set, ``input_data_fn`` "
"will be called with a :class:`pandas.DataFrame` containing all test data."
msgstr ""

#: 2ef39d8475404d5eb12a1baaa3938877 d4e23229912a4f5f814e80b47e333812
#: feee91a36a1c461ea8afc7faff200f2c ff77b71a3c9748579d6e296c73b9ecca of
#: pybroker.model.ModelLoader:16 pybroker.model.ModelSource:12
#: pybroker.model.ModelTrainer:17 pybroker.model.model:20
msgid ""
":class:`Callable[[Model, DataFrame], ndarray]` that overrides calling the"
" model's default ``predict`` function. If set, ``predict_fn`` will be "
"called with the trained model and a :class:`pandas.DataFrame` containing "
"all test data."
msgstr ""

#: c869253d3e684645ba9b65f3b9cb6c93 of pybroker.model.ModelLoader:20
msgid "``dict`` of kwargs to pass to ``load_fn``."
msgstr ""

#: 1f5d93938368403f8646dbb44d4c2901 of pybroker.model.ModelLoader.__call__:1
msgid "Loads pre-trained model."
msgstr ""

#: ffe4ecfcd88f4708a4f8241432e45809 of pybroker.model.ModelLoader.__call__:3
msgid "Ticker symbol for loading the pre-trained model."
msgstr ""

#: 441241588a2949a1a2206e68476339e0 58b0ba7a7fd84f84b7badeb6ab1ef0dd
#: ecfaf9431a594814b58b354ea16eaf13 f108edc4458c4572a98f27ecba56c7f4 of
#: pybroker.model.ModelLoader.__call__ pybroker.model.ModelTrainer.__call__
#: pybroker.model.ModelsMixin.train_models pybroker.model.model
msgid "Returns"
msgstr ""

#: f9c0209d9ce942948105600c05fa3d6f of pybroker.model.ModelLoader.__call__:5
msgid "Pre-trained model."
msgstr ""

#: 8ffa533d9715451492e74c35f421983f f373f9b7aef34ad4b321b41156f39e48 of
#: pybroker.model.ModelSource:1 pybroker.model.ModelsMixin:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: c6a77621d19148ea90a0eb99bc8872e0 of pybroker.model.ModelSource:1
msgid ""
"Base class of a model source. A model source provides a model instance "
"either by training one or by loading a pre-trained model."
msgstr ""

#: 0fe55d5781cf482aa99a3434c5ba37a2 of pybroker.model.ModelSource:16
msgid "``dict`` of additional kwargs."
msgstr ""

#: b8ed1e7f40854791bc6c26127cfa6efc of
#: pybroker.model.ModelSource.prepare_input_data:1
msgid ""
"Prepares a :class:`pandas.DataFrame` of input data for passing to a model"
" when making predictions. If set, the ``input_data_fn`` is used to "
"preprocess the input data. If ``False``, then indicator columns in ``df``"
" are used as input features."
msgstr ""

#: 43dff1b06c8848b0972c705d442e73e0 of pybroker.model.ModelTrainer:1
msgid "Trains a model."
msgstr ""

#: bf0b7bd8c85b433a991946af27a57cff of pybroker.model.ModelTrainer:4
msgid ""
"``Callable[[symbol: str, train_data: DataFrame, test_data: DataFrame, "
"...], DataFrame]`` used to train and return a model. This is expected to "
"return either a trained model instance, or a tuple containing a trained "
"model instance and a :class:`Collection` of column names to to be used as"
" input for the model when making predictions."
msgstr ""

#: a4d0eba87a39439490bd3b02a8bc0642 of pybroker.model.ModelTrainer:21
msgid "``dict`` of kwargs to pass to ``train_fn``."
msgstr ""

#: 57066838c74a4c018836270635af85e7 of pybroker.model.ModelTrainer.__call__:1
msgid "Trains model."
msgstr ""

#: 89e2e606c174444aa4608a22e5558a41 of pybroker.model.ModelTrainer.__call__:3
msgid "Ticker symbol of model (models are trained per symbol)."
msgstr ""

#: 5fb3c743976445abbb5a310d7756771e of pybroker.model.ModelTrainer.__call__:4
msgid "Train data."
msgstr ""

#: 8ea7bc122c344e1b8e34462cde3cc5a4 of pybroker.model.ModelTrainer.__call__:5
msgid "Test data."
msgstr ""

#: 1b032fbce6ab4f7da8fcfa86724247c4 of pybroker.model.ModelTrainer.__call__:7
msgid "Trained model."
msgstr ""

#: 7fbfe5695a2e4f40a9facd66f6049fe6 of pybroker.model.ModelsMixin:1
msgid "Mixin implementing model related functionality."
msgstr ""

#: 7b017f451d21496b8cfe63fd23f08abe of
#: pybroker.model.ModelsMixin.train_models:1
msgid "Trains models for the provided :class:`pybroker.common.ModelSymbol` pairs."
msgstr ""

#: 8fdef7c3b47e4da5ba82e0ce49794e35 of
#: pybroker.model.ModelsMixin.train_models:4
msgid ""
"``Collection`` of :class:`pybroker.common.ModelSymbol` pairs of models to"
" train."
msgstr ""

#: 852d7796ab77468297f742dbe271bceb of
#: pybroker.model.ModelsMixin.train_models:6
msgid ":class:`pandas.DataFrame` of training data."
msgstr ""

#: 5081448e96934052be56e16295154640 of
#: pybroker.model.ModelsMixin.train_models:7
msgid ":class:`pandas.DataFrame` of test data."
msgstr ""

#: 8813e4f7ae51499186f96b1a5f0e1167 of
#: pybroker.model.ModelsMixin.train_models:8
msgid ""
"``Mapping`` of :class:`pybroker.common.IndicatorSymbol` pairs to "
"``pandas.Series`` of :class:`pybroker.indicator.Indicator` values."
msgstr ""

#: 154e92b3e3064b27844759eb6d734038 of
#: pybroker.model.ModelsMixin.train_models:12
msgid "Date fields used to key cache data."
msgstr ""

#: 8629333ed57a49e6ba719d44b6c26f4c of
#: pybroker.model.ModelsMixin.train_models:14
msgid ""
"``dict`` mapping each :class:`pybroker.common.ModelSymbol` pair to a "
":class:`pybroker.common.TrainedModel`."
msgstr ""

#: bf8274cfae79485786a77d828d059245 of pybroker.model.model:1
msgid ""
"Creates a :class:`.ModelSource` instance and registers it globally with "
"``name``."
msgstr ""

#: 51335354d6fb47ed815db5bbbf048b1f of pybroker.model.model:4
msgid "Name for referencing the model globally."
msgstr ""

#: 89102ad7df264036b0d504f620b708c9 of pybroker.model.model:5
msgid ""
":class:`Callable` used to either train or load a model instance. If for "
"training, then ``fn`` has signature ``Callable[[symbol: str, train_data: "
"DataFrame, test_data: DataFrame, ...], DataFrame]``. If for loading, then"
" ``fn`` has signature ``Callable[[symbol: str, ...], DataFrame]``. This "
"is expected to return either a trained model instance, or a tuple "
"containing a trained model instance and a :class:`Collection` of column "
"names to to be used as input for the model when making predictions."
msgstr ""

#: 9c2b3410016047ffa3b2368086212524 of pybroker.model.model:13
msgid ""
":class:`Iterable` of :class:`pybroker.indicator.Indicator`\\ s used as "
"features of the model."
msgstr ""

#: 5013dcdfa33148f5b61f2f5258759c32 of pybroker.model.model:24
msgid ""
"If ``True``, then ``fn`` is used to load and return a pre-trained model. "
"If ``False``, ``fn`` is used to train and return a new model. Defaults to"
" ``False``."
msgstr ""

#: 5744f6bcda9b425e912a42566b72f641 of pybroker.model.model:27
msgid "Additional arguments to pass to ``fn``."
msgstr ""

#: 9663c2768dae4979947cf70891bd4f54 of pybroker.model.model:29
msgid ":class:`.ModelSource` instance."
msgstr ""

