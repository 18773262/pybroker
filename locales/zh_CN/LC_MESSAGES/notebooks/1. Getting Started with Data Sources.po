# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 22:52-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../docs/source/notebooks/1. 875be77ba7004bbaa240d87c3750ce97 Data Getting
#: Sources.ipynb:9 Started with
msgid "Getting Started with Data Sources"
msgstr ""

#: ../../docs/source/notebooks/1. 24b4d1b0fee74810b18c3ace1263ee14 Data Getting
#: Sources.ipynb:11 Started with
msgid ""
"Welcome to **PyBroker**! The best place to start is to learn about "
"`DataSources "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.DataSource>`__."
" A ``DataSource`` is a class that can fetch data from external sources, "
"which you can then use to backtest your trading strategies."
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:14 Started
#: bae5428ee2bb41d19b188d64327361b8 with
msgid "Yahoo Finance"
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:16 Started
#: e5fc685dc9674a9d8b4f7108979060a0 with
msgid ""
"One of the built-in ``DataSources`` in **PyBroker** is `Yahoo Finance "
"<https://finance.yahoo.com>`__. To use it, you can import `YFinance "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.YFinance>`__:"
msgstr ""

#: ../../docs/source/notebooks/1. 5710d09f801a4269a3f7ccb19c163249 Data Getting
#: Sources.ipynb:344 Started with
msgid ""
"The above code queries data for AAPL and MSFT stocks, and returns a "
"`Pandas DataFrame "
"<https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.html>`__ "
"with the results."
msgstr ""

#: ../../docs/source/notebooks/1. 24175655539742509c6cc079d0884d01 Data Getting
#: Sources.ipynb:347 Started with
msgid "Caching Data"
msgstr ""

#: ../../docs/source/notebooks/1. 8bbccfdcfec9491eb2aa81dc636965b8 Data Getting
#: Sources.ipynb:349 Started with
msgid ""
"If you want to speed up your data retrieval, you can cache your queries "
"using **PyBroker**\\ ’s caching system. You can enable caching by calling"
" `pybroker.enable_data_source_cache(‘name’) "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__"
" where ``name`` is the name of the cache you want to use:"
msgstr ""

#: ../../docs/source/notebooks/1. 56cf0660d564427ba785034c98e5cad3 Data Getting
#: Sources.ipynb:397 Started with
msgid ""
"The next call to `query "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.DataSource.query>`__"
" will cache the returned data to disk. Each unique combination of ticker "
"symbol and date range will be cached separately:"
msgstr ""

#: ../../docs/source/notebooks/1. 40798d0f8f484287a5d13b824bee8078 Data Getting
#: Sources.ipynb:721 Started with
msgid ""
"Calling ``query`` again with the same ticker symbols and date range "
"returns the cached data:"
msgstr ""

#: ../../docs/source/notebooks/1. 05eae20b63b843c4b105f179fa0a677d Data Getting
#: Sources.ipynb:1040 Started with
msgid ""
"You can clear your cache using `pybroker.clear_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.clear_data_source_cache>`__:"
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:1061 Started
#: c754e12b5e514d1d889e82256cf646aa with
msgid ""
"Or disable caching altogether using `pybroker.disable_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.disable_data_source_cache>`__:"
msgstr ""

#: ../../docs/source/notebooks/1. 84372edb78254f92a6f72764b2d86fe1 Data Getting
#: Sources.ipynb:1082 Started with
msgid ""
"Note that these calls should be made after first calling "
"`pybroker.enable_data_source_cache "
"<https://www.pybroker.com/en/latest/reference/pybroker.cache.html#pybroker.cache.enable_data_source_cache>`__."
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:1094 Started
#: b7fccb422fb841818a9855b2bdf3ffe2 with
msgid "Alpaca"
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:1096 Started
#: adf21633d6f14ff194d89b6818ce9685 with
msgid ""
"**PyBroker** also includes an `Alpaca <https://alpaca.markets/>`__ "
"``DataSource`` for fetching stock data. To use it, you can import `Alpaca"
" "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.Alpaca>`__"
" and provide your API key and secret:"
msgstr ""

#: ../../docs/source/notebooks/1. 8d59ed63a53547fc988657f947f33e68 Data Getting
#: Sources.ipynb:1120 Started with
msgid ""
"You can query ``Alpaca`` for stock data using the same syntax as with "
"Yahoo Finance, but Alpaca also supports querying data by different "
"timeframes. For example, to query 1 minute data:"
msgstr ""

#: ../../docs/source/notebooks/1. 2b4b517f7da543088c62f0bda592ba93 Data Getting
#: Sources.ipynb:1448 Started with
msgid "Alpaca Crypto"
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:1450 Started
#: bef210ba15fb4cc98800b27ebf176d1c with
msgid ""
"If you are interested in fetching cryptocurrency data, you can use "
"`AlpacaCrypto "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.AlpacaCrypto>`__."
" Here’s an example of how to use it:"
msgstr ""

#: ../../docs/source/notebooks/1. 7effd120ff0b40fa9a099f7e183561be Data Getting
#: Sources.ipynb:1790 Started with
msgid ""
"In the above example, we’re querying for hourly data for the BTC/USD "
"currency pair."
msgstr ""

#: ../../docs/source/notebooks/1. 2c6ddb4ac8ba492c8c3ded9986dc7860 Data Getting
#: Sources.ipynb:1802 Started with
msgid "AKShare"
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:1804 Started
#: dbdf85c459a14b39aeddf245be0a722f with
msgid ""
"**PyBroker** also includes an `AKShare "
"<https://github.com/akfamily/akshare>`__ ``DataSource`` for fetching "
"**Chinese** stock data. AKShare, a widely-used open-source package, is "
"tailored for obtaining financial data, with a focus on the Chinese "
"market. This free tool provides users with access to higher quality data "
"compared to yfinance for the Chinese market. To use it, you can import "
"`AKShare "
"<https://www.pybroker.com/en/latest/reference/pybroker.data.html#pybroker.data.AKShare>`__:"
msgstr ""

#: ../../docs/source/notebooks/1. Data Getting Sources.ipynb:2091 Started
#: b865ddbbb07246ee93fdcb7c255c2a74 with
msgid ""
"`In the next notebook, we’ll take a look at how to use DataSources to "
"backtest a simple trading strategy "
"<https://www.pybroker.com/en/latest/notebooks/2.%20Backtesting%20a%20Strategy.html>`__."
msgstr ""

