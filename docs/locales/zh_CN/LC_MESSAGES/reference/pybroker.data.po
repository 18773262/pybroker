# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 21:23+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/reference/pybroker.data.rst:2 ff38425355354ca2889ba80be7bc013d
msgid "pybroker.data module"
msgstr ""

#: 0080a019da1a48728d6162ee66626c2d of pybroker.data:1
msgid "Contains :class:`.DataSource`\\ s used to fetch external data."
msgstr ""

#: 10532097e9b44c10afbe358054c85de7 1e7b474fb9a04463b3cce9e829962a56
#: 91bafc19a60543c68b8c3ec2b97fde3f de6a5e9ff81d41c9949a1b9eaaeba3d8 of
#: pybroker.data.AKShare:1 pybroker.data.Alpaca:1 pybroker.data.AlpacaCrypto:1
#: pybroker.data.YFinance:1
msgid "Bases: :py:class:`~pybroker.data.DataSource`"
msgstr ""

#: 177549811b6144b788dabacb77f4e9c3 of pybroker.data.AKShare:1
msgid "Retrieves data from `AKShare <https://akshare.akfamily.xyz/>`_\\ ."
msgstr ""

#: 36d8b6f64fe749faa23deb46c16f24e9 94e258b2407441e9907141c6e916c183 of
#: pybroker.data.AKShare:5 pybroker.data.YFinance:5
msgid "Column name of adjusted close prices."
msgstr ""

#: 9b67c4f415a744afa7ea0edadf24b807 f737771122a548e7947828ec9ca4685d of
#: pybroker.data.AKShare pybroker.data.YFinance
msgid "type"
msgstr ""

#: b0ee912661934088885af7a491697c44 d58fc5ffb3f441ab8a002f95ead4c3d0 of
#: pybroker.data.AKShare:7 pybroker.data.YFinance:7
msgid "Final"
msgstr ""

#: 1ff7bd8035d441a1b9267398cadf9b69 of pybroker.data.AKShare.query:1
msgid ""
"Queries data from `AKShare <https://akshare.akfamily.xyz/>`_\\ . The "
"timeframe of the data is limited to per day only."
msgstr ""

#: 2b22cebcc26443a386a2ab2165989a91 2ca620d6c0d74c5ea6d0767242f28748
#: 36e36570ca8d44ccb41b61cf51776a41 6fda4b4256f14d2e8ee51b418131279e
#: 715b68495c1b4811afdba410520031db 8f26f6b666604861aee2998d75507add
#: 932dc79779bc45ca9201d32d5fd2ee7e d11a50ff384c480e88c5cbd5c1ac3e6b
#: fde60a76a9f44d4cad2f84cc37e43283 of pybroker.data.AKShare.query
#: pybroker.data.Alpaca.query pybroker.data.AlpacaCrypto
#: pybroker.data.AlpacaCrypto.query pybroker.data.DataSource._fetch_data
#: pybroker.data.DataSource.query pybroker.data.DataSourceCacheMixin.get_cached
#: pybroker.data.DataSourceCacheMixin.set_cached pybroker.data.YFinance.query
msgid "Parameters"
msgstr ""

#: 2a0cb23b229b43d99bf91fdf01ebffaf 642458ae8fb747fbbb2476704f1a8c44
#: d8d5a9e0841a42b4bfa05eb20833b0b2 of pybroker.data.AKShare.query:4
#: pybroker.data.DataSource._fetch_data:7 pybroker.data.YFinance.query:4
msgid "Ticker symbols of the data to query."
msgstr ""

#: 07ec5839450e44108fb26f32b22ca891 19c864202ea84160bc41b11892d7b2a1
#: 1bbcc1bf5d014d19942d8a93d00b56c9 240b430a4b6f467abf0327b698b95fb6
#: e96d36c949eb4a70991b0f41a454d939 f8ccfe58d1c640879d9060c615b2d16e of
#: pybroker.data.AKShare.query:5 pybroker.data.Alpaca.query:5
#: pybroker.data.AlpacaCrypto.query:5 pybroker.data.DataSource._fetch_data:8
#: pybroker.data.DataSource.query:5 pybroker.data.YFinance.query:5
msgid "Start date of the data to query (inclusive)."
msgstr ""

#: 0f3c646dc2f04fa19165609da6c378ad 1216ca46fe4948bb832b9dfe7abdb155
#: 79ee73725f6e451d858f09ccac4fd809 7c1afc55c133487a8c5bfd8ab527302e
#: bfb2c8b97553487eaf9b98b2270f7bac ece7659af17640c9a5c87b110b4f5b61 of
#: pybroker.data.AKShare.query:6 pybroker.data.Alpaca.query:6
#: pybroker.data.AlpacaCrypto.query:6 pybroker.data.DataSource._fetch_data:9
#: pybroker.data.DataSource.query:6 pybroker.data.YFinance.query:6
msgid "End date of the data to query (inclusive)."
msgstr ""

#: 09e5c96d5142479aa7bd4322152194fa 120dd29c4499451eaad2f6906a796f3d
#: 2b825253065e415e925a0d46769c9f53 79f4af737be64f7685f241cb545af9de
#: 88bd84414bc84320a08cf843423c7826 c561b2d464db449b9676a07f833d2d3b
#: e61e27f8c5ba422c8406ba85a833f0f8 of pybroker.data.AKShare.query
#: pybroker.data.Alpaca.query pybroker.data.AlpacaCrypto.query
#: pybroker.data.DataSource._fetch_data pybroker.data.DataSource.query
#: pybroker.data.DataSourceCacheMixin.get_cached pybroker.data.YFinance.query
msgid "Returns"
msgstr ""

#: 47a7862a8be248e7a7b1998b6c6f0ac8 92c2614946aa4dc588719cd289f37bbb
#: d3221ac467414cbfbb8faf3895882b28 d9bf1da0e2d0449db95b8aa36c48074d
#: ec7667336fd7406f8df1fbf8dee0e101 f07b5d3dae814270980d4e2a28a69389 of
#: pybroker.data.AKShare.query:8 pybroker.data.Alpaca.query:20
#: pybroker.data.AlpacaCrypto.query:20 pybroker.data.DataSource._fetch_data:23
#: pybroker.data.DataSource.query:20 pybroker.data.YFinance.query:8
msgid ":class:`pandas.DataFrame` containing the queried data."
msgstr ""

#: 76f2b443238b4264aa481cdfbd4b579d of pybroker.data.Alpaca:1
msgid "Retrieves stock data from `Alpaca <https://alpaca.markets/>`_."
msgstr ""

#: 013a9fec30f54df1b46d0609628ac34a 18b8139545704157846c9c6ae7cc72d5
#: 1c1dc4c7838d4ede96f08fb9b4801f47 of pybroker.data.Alpaca.query:1
#: pybroker.data.AlpacaCrypto.query:1 pybroker.data.DataSource.query:1
msgid ""
"Queries data. Cached data is returned if caching is enabled by calling "
":meth:`pybroker.cache.enable_data_source_cache`."
msgstr ""

#: 313e973c0b0a4d63a1a2b6dfa4dbfb1c 93c95cf6de25456dacad8693e8ecaec3
#: de4706ac6f344156b4e6c56af9b74b5e of pybroker.data.Alpaca.query:4
#: pybroker.data.AlpacaCrypto.query:4 pybroker.data.DataSource.query:4
msgid "Symbols of the data to query."
msgstr ""

#: 0411ea0407b049a7a4c68c507dbcdf6c 72835349d0604fe2af3f32726f822d33
#: d1250c3f395c487a8fa72749ce7e6684 d4b6d8aa8ed04cf8a96a3dcc31616fe1 of
#: pybroker.data.Alpaca.query:7 pybroker.data.AlpacaCrypto.query:7
#: pybroker.data.DataSource._fetch_data:10 pybroker.data.DataSource.query:7
msgid ""
"Formatted string that specifies the timeframe resolution to query. The "
"timeframe string supports the following units:  - ``\"s\"``/``\"sec\"``: "
"seconds - ``\"m\"``/``\"min\"``: minutes - ``\"h\"``/``\"hour\"``: hours "
"- ``\"d\"``/``\"day\"``: days - ``\"w\"``/``\"week\"``: weeks - "
"``\"mo\"``/``\"month\"``: months  An example timeframe string is ``1h "
"30m``."
msgstr ""

#: b132a1e50fe540b9b6e15704a45c9f5c b231c365805f4b12bb8d71416576b236
#: c9db1c71ef504e93b3d46311dcb300ea ce51578d0659477a85e15bb5fd085331 of
#: pybroker.data.Alpaca.query:7 pybroker.data.AlpacaCrypto.query:7
#: pybroker.data.DataSource._fetch_data:10 pybroker.data.DataSource.query:7
msgid ""
"Formatted string that specifies the timeframe resolution to query. The "
"timeframe string supports the following units:"
msgstr ""

#: 0cab9d33a2184561a33fca32dbdd16f6 447547f914704c0b80dc924fb343c4cf
#: 8846cf0cba9c4a7a85a88728c2138678 a55e391de62b452da506a9bdf1c532cc
#: d00fce480e364e65a458a5b904570895 d9f59d7725c24eb397726484fdb397d0 of
#: pybroker.data.Alpaca.query:11 pybroker.data.AlpacaCrypto.query:11
#: pybroker.data.DataSource._fetch_data:14 pybroker.data.DataSource.query:11
#: pybroker.data.DataSourceCacheMixin.get_cached:9
#: pybroker.data.DataSourceCacheMixin.set_cached:8
msgid "``\"s\"``/``\"sec\"``: seconds"
msgstr ""

#: 06ccbea9319d4fd0aa98bebfa586e019 2b2a4d1f8650415c83e29e303ddfe24c
#: 533bfe8df1dd4a8ba3d75fd998b83ef6 73f5cc62881a4816817b6b4154365aba
#: 946774de111247cca5d6af42f454a9da b617b07ad45f402bb1ed2fee9cd599d0 of
#: pybroker.data.Alpaca.query:12 pybroker.data.AlpacaCrypto.query:12
#: pybroker.data.DataSource._fetch_data:15 pybroker.data.DataSource.query:12
#: pybroker.data.DataSourceCacheMixin.get_cached:10
#: pybroker.data.DataSourceCacheMixin.set_cached:9
msgid "``\"m\"``/``\"min\"``: minutes"
msgstr ""

#: 0f0982a5060847d499a0b042dc78dea9 25d74713bd244f3ead2716473b41591a
#: 82ec9e0cf755476a9812f678324f47e6 a47420f2c5864826985bc6763597e0a6
#: cd9eeccf6c18444b931f14926b793290 de2bad87aa8c4255ab25a10465afb9be of
#: pybroker.data.Alpaca.query:13 pybroker.data.AlpacaCrypto.query:13
#: pybroker.data.DataSource._fetch_data:16 pybroker.data.DataSource.query:13
#: pybroker.data.DataSourceCacheMixin.get_cached:11
#: pybroker.data.DataSourceCacheMixin.set_cached:10
msgid "``\"h\"``/``\"hour\"``: hours"
msgstr ""

#: 201290fe0dcc4ce08d2f8c2cda6ea09d 2b709194900f40b2a719a6f408590861
#: 69f10372b5c74defa11889857b3826c4 9101dc5c9e9a4d8a9fbf330caaf50588
#: 9f1e140cc1704fcca36443f4a61941ba ab3ef99aa807444db29c0d244f3737d3 of
#: pybroker.data.Alpaca.query:14 pybroker.data.AlpacaCrypto.query:14
#: pybroker.data.DataSource._fetch_data:17 pybroker.data.DataSource.query:14
#: pybroker.data.DataSourceCacheMixin.get_cached:12
#: pybroker.data.DataSourceCacheMixin.set_cached:11
msgid "``\"d\"``/``\"day\"``: days"
msgstr ""

#: 2e0e51d7c76d4e7292c7d0a48a23531b 5d154332667847faa198829c0969bfe1
#: 7e65d0a96eb74004902573e70a3a3e11 a1c7dbdf367e481c85cb39082c1596d9
#: f219de8e81b647a5b8c3fd62444601cb f2a11f35897247bc9dbe483eda1a50be of
#: pybroker.data.Alpaca.query:15 pybroker.data.AlpacaCrypto.query:15
#: pybroker.data.DataSource._fetch_data:18 pybroker.data.DataSource.query:15
#: pybroker.data.DataSourceCacheMixin.get_cached:13
#: pybroker.data.DataSourceCacheMixin.set_cached:12
msgid "``\"w\"``/``\"week\"``: weeks"
msgstr ""

#: 5f282e714f9f4d33beee473545379f33 73786f1004794a1691041217c3b43e12
#: 93867fcced76417c86074c1fe2a89801 be4437f404bb4157a8e8dcbee49f9752
#: bee6c29f47ac4d92a45d0d94e0732800 df615011495e4527903a52739d5a3210 of
#: pybroker.data.Alpaca.query:16 pybroker.data.AlpacaCrypto.query:16
#: pybroker.data.DataSource._fetch_data:19 pybroker.data.DataSource.query:16
#: pybroker.data.DataSourceCacheMixin.get_cached:14
#: pybroker.data.DataSourceCacheMixin.set_cached:13
msgid "``\"mo\"``/``\"month\"``: months"
msgstr ""

#: 1d48842d1fca4e269952f973e7cf64e6 1fe6e5034c474291a16aee6e4449b4b1
#: 4c9219ffef494a6bafd09edcad8622e2 66ac9ddc7736496db6f9d9f5647d1681
#: 7030e34a678c4c25bb61691cc2e2571c of pybroker.data.Alpaca.query:18
#: pybroker.data.AlpacaCrypto.query:18 pybroker.data.DataSource._fetch_data:21
#: pybroker.data.DataSource.query:18
#: pybroker.data.DataSourceCacheMixin.get_cached:16
msgid "An example timeframe string is ``1h 30m``."
msgstr ""

#: d2c0d330ec4948618a2e4b786ff4907a of pybroker.data.AlpacaCrypto:1
msgid "Retrieves crypto data from `Alpaca <https://alpaca.markets/>`_."
msgstr ""

#: b019417c7d954dbd9739a78a81612816 of pybroker.data.AlpacaCrypto:3
msgid "Alpaca API key."
msgstr ""

#: 282c2f3ff0464f279859bbdee79509e7 of pybroker.data.AlpacaCrypto:4
msgid "Alpaca API secret."
msgstr ""

#: e0b06a6d4e8a456ea9b9ebccdd57f917 of pybroker.data.DataSource:1
msgid ""
"Bases: :py:class:`~abc.ABC`, "
":py:class:`~pybroker.data.DataSourceCacheMixin`"
msgstr ""

#: d6565d29df3b41a4be699c4c9646354e of pybroker.data.DataSource:1
msgid ""
"Base class for querying data from an external source. Extend this class "
"and override :meth:`._fetch_data` to implement a custom "
":class:`.DataSource` that can be used with "
":class:`pybroker.strategy.Strategy`."
msgstr ""

#: 0f624e17e1f64d75996f76e0dfd579b9 of pybroker.data.DataSource._fetch_data:2
msgid ""
"Override this method to return data from a custom source. The returned "
":class:`pandas.DataFrame` must contain the following columns: ``symbol``,"
" ``date``, ``open``, ``high``, ``low``, and ``close``."
msgstr ""

#: 6b09f808bb5e4fa48c7d12a70f677b1e of pybroker.data.DataSourceCacheMixin:1
msgid "Bases: :py:class:`object`"
msgstr ""

#: 3772cf0948594f65b6ff3b76ccefac9f of pybroker.data.DataSourceCacheMixin:1
msgid ""
"Mixin that implements fetching and storing cached :class:`.DataSource` "
"data."
msgstr ""

#: 32a0c6a3da6d46028bb829fe6e23fc04 of
#: pybroker.data.DataSourceCacheMixin.get_cached:1
msgid ""
"Retrieves cached data from disk when caching is enabled with "
":meth:`pybroker.cache.enable_data_source_cache`."
msgstr ""

#: 04d2350c7e92492da63e68da4bfd9723 of
#: pybroker.data.DataSourceCacheMixin.get_cached:4
msgid ":class:`Iterable` of symbols for fetching cached data."
msgstr ""

#: 296ff92fd65e4c8c9fa88ab2a2bf13c8 of
#: pybroker.data.DataSourceCacheMixin.get_cached:5
msgid ""
"Formatted string that specifies the timeframe resolution of the cached "
"data. The timeframe string supports the following units:  - "
"``\"s\"``/``\"sec\"``: seconds - ``\"m\"``/``\"min\"``: minutes - "
"``\"h\"``/``\"hour\"``: hours - ``\"d\"``/``\"day\"``: days - "
"``\"w\"``/``\"week\"``: weeks - ``\"mo\"``/``\"month\"``: months  An "
"example timeframe string is ``1h 30m``."
msgstr ""

#: f1f3d0b13b0c4491b7ead77946550a22 of
#: pybroker.data.DataSourceCacheMixin.get_cached:5
msgid ""
"Formatted string that specifies the timeframe resolution of the cached "
"data. The timeframe string supports the following units:"
msgstr ""

#: 5c08d1fc369443548150aa8861883d26 of
#: pybroker.data.DataSourceCacheMixin.get_cached:17
msgid "Starting date of the cached data (inclusive)."
msgstr ""

#: 319c4c280c0a4b7ba72e4aa5dbfc3bcb of
#: pybroker.data.DataSourceCacheMixin.get_cached:18
msgid "Ending date of the cached data (inclusive)."
msgstr ""

#: 8c42d40e361b459ab35a60272b6c731c of
#: pybroker.data.DataSourceCacheMixin.get_cached:20
msgid ""
"``tuple[pandas.DataFrame, Iterable[str]]`` containing a "
":class:`pandas.DataFrame` with the cached data, and an ``Iterable[str]`` "
"of symbols for which no cached data was found."
msgstr ""

#: 0384d90ce2f24ec3ad32ee60f2ad9884 of
#: pybroker.data.DataSourceCacheMixin.set_cached:1
msgid ""
"Stores data to disk cache when caching is enabled with "
":meth:`pybroker.cache.enable_data_source_cache`."
msgstr ""

#: 225ef402734244119e7485c450f03f4a of
#: pybroker.data.DataSourceCacheMixin.set_cached:4
msgid ""
"Formatted string that specifies the timeframe resolution of the data to "
"cache. The timeframe string supports the following units:  - "
"``\"s\"``/``\"sec\"``: seconds - ``\"m\"``/``\"min\"``: minutes - "
"``\"h\"``/``\"hour\"``: hours - ``\"d\"``/``\"day\"``: days - "
"``\"w\"``/``\"week\"``: weeks - ``\"mo\"``/``\"month\"``: months  An "
"example timeframe string would be ``1h 30m``."
msgstr ""

#: 53a24d7ca09c468f9f8bd9a8e57b2d68 of
#: pybroker.data.DataSourceCacheMixin.set_cached:4
msgid ""
"Formatted string that specifies the timeframe resolution of the data to "
"cache. The timeframe string supports the following units:"
msgstr ""

#: 59044d6c34b84da0bafe72beee017cb9 of
#: pybroker.data.DataSourceCacheMixin.set_cached:15
msgid "An example timeframe string would be ``1h 30m``."
msgstr ""

#: 1529c78b17cc46a48537ac231b551cce of
#: pybroker.data.DataSourceCacheMixin.set_cached:16
msgid "Starting date of the data to cache (inclusive)."
msgstr ""

#: 637c963e65fb4da1b19222deba7b0193 of
#: pybroker.data.DataSourceCacheMixin.set_cached:17
msgid "Ending date of the data to cache (inclusive)."
msgstr ""

#: cdaec35dbd234a85886064d9e0ae401e of
#: pybroker.data.DataSourceCacheMixin.set_cached:18
msgid ":class:`pandas.DataFrame` containing the data to cache."
msgstr ""

#: 85011e5ca22b4563b81fb30858eb8180 of pybroker.data.YFinance:1
msgid "Retrieves data from `Yahoo Finance <https://finance.yahoo.com/>`_\\ ."
msgstr ""

#: 03c8eb355c2f41cda6d8e4d2ff1296d7 of pybroker.data.YFinance.query:1
msgid ""
"Queries data from `Yahoo Finance <https://finance.yahoo.com/>`_\\ . The "
"timeframe of the data is limited to per day only."
msgstr ""

