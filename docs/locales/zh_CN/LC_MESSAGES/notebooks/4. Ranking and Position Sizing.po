# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, Edward West
# This file is distributed under the same license as the PyBroker package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyBroker \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-06-02 22:55-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.11.0\n"

#: ../../source/notebooks/4. 1df1dc7c5a744806a4535c7ced4a59e5 Position Ranking
#: Sizing.ipynb:9 and
msgid "Ranking and Position Sizing"
msgstr ""

#: ../../source/notebooks/4. Position Ranking Sizing.ipynb:11 and
#: e71823abe5b74616a35ab2ba0ebeebf2
msgid ""
"In this notebook, we will learn about the features of **PyBroker** that "
"enable you to rank ticker symbols and set position sizes for a group of "
"symbols in your trading strategy. With these features, you can easily "
"optimize your strategy and manage risk more effectively."
msgstr ""

#: ../../source/notebooks/4. 8aec7e9fbb624cf9912fc2ef642c894a Position Ranking
#: Sizing.ipynb:61 and
msgid "Ranking Ticker Symbols"
msgstr ""

#: ../../source/notebooks/4. Position Ranking Sizing.ipynb:63 and
#: bcc6fdc78e5e464484cdcf3d4388dd7d
msgid ""
"In this section, we will learn about how to rank ticker symbols when "
"placing buy orders. Let’s begin with an example of how to rank ticker "
"symbols based on volume when placing buy orders."
msgstr ""

#: ../../source/notebooks/4. 1922ea2e400245ec80db689142af9a97 Position Ranking
#: Sizing.ipynb:89 and
#, python-format
msgid ""
"The ``buy_highest_volume`` function ranks ticker symbols by their most "
"recent trading volume and allocates 100% of the portfolio for 2 bars. The"
" ``ctx.score`` is set to ``ctx.volume[-1]``, which is the most recent "
"trading volume."
msgstr ""

#: ../../source/notebooks/4. 4a616b071e4f41a2a23fa604b9891478 Position Ranking
#: Sizing.ipynb:112 and
msgid ""
"To limit the number of long positions that can be held at any time to "
"``1``, we set `max_long_positions "
"<https://www.pybroker.com/en/latest/reference/pybroker.config.html#pybroker.config.StrategyConfig.max_long_positions>`__"
" to ``1`` in the `StrategyConfig "
"<https://www.pybroker.com/en/latest/reference/pybroker.config.html#pybroker.config.StrategyConfig>`__."
" In this example, we add the ``buy_highest_volume`` function to the "
"`Strategy "
"<https://www.pybroker.com/en/latest/reference/pybroker.strategy.html#pybroker.strategy.Strategy>`__"
" object and specify the ticker symbols to trade: ``['T', 'F', 'GM', "
"'PFE']``."
msgstr ""

#: ../../source/notebooks/4. 19cba8b1a9df442fa7a2bc6885951047 Position Ranking
#: Sizing.ipynb:584 and
msgid "Setting Position Sizes"
msgstr ""

#: ../../source/notebooks/4. 0ed73d6b3b9b4b69a4579538a6170b08 Position Ranking
#: Sizing.ipynb:586 and
msgid ""
"In **PyBroker**, you can set position sizes based on multiple tickers. To"
" illustrate this, let’s take a simple buy and hold strategy that starts "
"trading after 100 days and holds positions for 30 days:"
msgstr ""

#: ../../source/notebooks/4. Position Ranking Sizing.ipynb:613 and
#: e536d10d8c00458b9230bcca85907ed4
msgid ""
"This will buy ``100`` shares in each of ``['T', 'F', 'GM', 'PFE']``. But "
"what if you don’t want to use equal position sizing? For example, you may"
" want to size positions so that more shares are allocated to tickers with"
" lower volatility to decrease the portfolio’s overall volatility."
msgstr ""

#: ../../source/notebooks/4. 4c37f14deb5f446ebbf3bac9ffe730e8 Position Ranking
#: Sizing.ipynb:615 and
msgid ""
"To customize position sizing for each ticker, we can define a "
"`pos_size_handler "
"<https://www.pybroker.com/en/latest/reference/pybroker.strategy.html#pybroker.strategy.Strategy.set_pos_size_handler>`__"
" function that calculates the position size for each ticker:"
msgstr ""

#: ../../source/notebooks/4. Position Ranking Sizing.ipynb:655 and
#: e400613a91c34915b4e16e83b23f1a7a
msgid ""
"The handler runs on every bar that generates a buy or sell signal when "
"`buy_shares "
"<https://www.pybroker.com/en/latest/reference/pybroker.context.html#pybroker.context.ExecContext.buy_shares>`__"
" or `sell_shares "
"<https://www.pybroker.com/en/latest/reference/pybroker.context.html#pybroker.context.ExecContext.sell_shares>`__"
" is set on the `ExecContext "
"<https://www.pybroker.com/en/latest/reference/pybroker.context.html#pybroker.context.ExecContext>`__:"
msgstr ""

#: ../../source/notebooks/4. 645cd1479c584719835350f751a477b5 Position Ranking
#: Sizing.ipynb:1230 and
msgid ""
"Using this method allows for a lot of possibilities, such as using `Mean-"
"Variance Optimization "
"<https://en.wikipedia.org/wiki/Modern_portfolio_theory>`__ to determine "
"portfolio allocations."
msgstr ""

#: ../../source/notebooks/4. 14dcc3d3777d4455ad3cd97ae7a0a646 Position Ranking
#: Sizing.ipynb:1232 and
msgid ""
"`In the next notebook, we will discuss how to implement custom indicators"
" in PyBroker "
"<https://www.pybroker.com/en/latest/notebooks/5.%20Writing%20Indicators.html>`__."
msgstr ""

#~ msgid ""
#~ "In this section, we will learn "
#~ "about how to rank ticker symbols "
#~ "when placing buy orders. Let's begin "
#~ "with an example of how to rank "
#~ "ticker symbols based on volume when "
#~ "placing buy orders."
#~ msgstr ""

#~ msgid ""
#~ "In **PyBroker**, you can set position"
#~ " sizes based on multiple tickers. To"
#~ " illustrate this, let's take a simple"
#~ " buy and hold strategy that starts"
#~ " trading after 100 days and holds "
#~ "positions for 30 days:"
#~ msgstr ""

#~ msgid ""
#~ "This will buy ``100`` shares in "
#~ "each of ``['T', 'F', 'GM', 'PFE']``. "
#~ "But what if you don't want to "
#~ "use equal position sizing? For example,"
#~ " you may want to size positions "
#~ "so that more shares are allocated "
#~ "to tickers with lower volatility to "
#~ "decrease the portfolio's overall volatility."
#~ msgstr ""

